name: Deploy to Lightsail
on:
  push:
    branches: [main, dev]  # main = production, dev = preview

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Determine deployment environment
        id: env
        run: |
          if [ "${{ github.ref_name }}" = "main" ]; then
            echo "ENVIRONMENT=production" >> $GITHUB_OUTPUT
            echo "TARGET_HOST=${{ secrets.LIGHTSAIL_PROD_HOST }}" >> $GITHUB_OUTPUT
            echo "ENV_FILE=.env.production" >> $GITHUB_OUTPUT
          else
            echo "ENVIRONMENT=preview" >> $GITHUB_OUTPUT
            echo "TARGET_HOST=${{ secrets.LIGHTSAIL_DEV_HOST }}" >> $GITHUB_OUTPUT
            echo "ENV_FILE=.env.dev" >> $GITHUB_OUTPUT
          fi

      - name: Deploy to Lightsail
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ steps.env.outputs.TARGET_HOST }}
          username: ubuntu
          key: ${{ github.ref_name == 'main' && secrets.LIGHTSAIL_PROD_SSH_KEY || secrets.LIGHTSAIL_DEV_SSH_KEY }}
          script: |
            # Set environment based on branch
            DEPLOY_ENV="${{ steps.env.outputs.ENVIRONMENT }}"
            ENV_FILE="${{ steps.env.outputs.ENV_FILE }}"
            echo "Deploying $DEPLOY_ENV environment (${{ github.ref_name }} branch)"
            
            # Preserve environment file
            if [ -f /opt/mizual/$ENV_FILE ]; then
              cp /opt/mizual/$ENV_FILE /tmp/$ENV_FILE.backup
              echo "Backed up $ENV_FILE"
            fi
            
            # Clean setup
            sudo rm -rf /opt/mizual
            sudo mkdir -p /opt/mizual
            sudo chown ubuntu:ubuntu /opt/mizual
            cd /opt/mizual
            git clone https://github.com/vizualtech-007/mizual-backend.git .
            git checkout ${{ github.ref_name }}
            
            # Restore environment file
            if [ -f /tmp/$ENV_FILE.backup ]; then
              cp /tmp/$ENV_FILE.backup $ENV_FILE
              echo "Restored $ENV_FILE"
            else
              echo "Warning: $ENV_FILE backup not found"
            fi
            
            # Deploy with specified environment
            echo "Starting deployment with Docker Compose..."
            
            # Check which docker compose command is available
            if command -v docker-compose &> /dev/null; then
                echo "Using docker-compose (legacy)"
                DEPLOY_ENV=$DEPLOY_ENV docker-compose -f docker-compose.prod.yml pull
                DEPLOY_ENV=$DEPLOY_ENV docker-compose -f docker-compose.prod.yml up -d --build
            else
                echo "Using docker compose (modern)"
                DEPLOY_ENV=$DEPLOY_ENV docker compose -f docker-compose.prod.yml pull
                DEPLOY_ENV=$DEPLOY_ENV docker compose -f docker-compose.prod.yml up -d --build
            fi
            
            echo "Deployment completed"
            
      - name: Health Check
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ steps.env.outputs.TARGET_HOST }}
          username: ubuntu
          key: ${{ github.ref_name == 'main' && secrets.LIGHTSAIL_PROD_SSH_KEY || secrets.LIGHTSAIL_DEV_SSH_KEY }}
          script: |
            sleep 30
            curl -f http://localhost:80/health || exit 1
            echo "${{ steps.env.outputs.ENVIRONMENT }} deployment successful!"