# Ultra-slim Dockerfile - Target: <250MB
# Stage 1: Builder with minimal dependencies
FROM python:3.11.9-alpine AS builder

WORKDIR /build

# Install ONLY essential build dependencies
RUN apk add --no-cache --virtual .build-deps \
    gcc \
    musl-dev \
    libffi-dev \
    # Minimal vips build deps
    vips-dev \
    pkgconfig

# Copy and use actual requirements.txt
COPY requirements.txt .

# Install Python packages from actual requirements
RUN pip install --no-cache-dir --prefix=/install -r requirements.txt

# Remove .pyc files and unnecessary files to save space
RUN find /install -name "*.pyc" -delete && \
    find /install -name "__pycache__" -type d -exec rm -rf {} + 2>/dev/null || true && \
    find /install -name "*.pyo" -delete && \
    find /install -name "tests" -type d -exec rm -rf {} + 2>/dev/null || true && \
    find /install -name "test" -type d -exec rm -rf {} + 2>/dev/null || true

# Stage 2: Ultra-minimal runtime
FROM python:3.11.9-alpine AS ultra-slim

WORKDIR /code

# Install ONLY runtime libraries (no dev packages)
RUN apk add --no-cache \
    # Minimal vips runtime
    vips \
    # Essential for health checks
    curl \
    # PostgreSQL client library
    libpq && \
    # Clean package cache
    rm -rf /var/cache/apk/*

# Copy only compiled packages
COPY --from=builder /install /usr/local

# Copy application code
COPY . /code

# Create non-root user
RUN adduser -D -s /bin/sh mizual && \
    chown -R mizual:mizual /code

USER mizual

# Minimal health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=2 \
    CMD curl -f http://localhost:8000/health || exit 1

EXPOSE 8000

CMD ["uvicorn", "app:app", "--host", "0.0.0.0", "--port", "8000"]